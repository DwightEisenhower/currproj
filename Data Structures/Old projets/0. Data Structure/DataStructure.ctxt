#BlueJ class context
comment0.target=DataStructure
comment0.text=\n\ Complete\ each\ of\ the\ indicated\ methods.\ Test\ each\ one\ thoroughly.\ In\ the\ event\ that\ a\ method\n\ cannot\ run\ as\ expected\ (perhaps\ because\ an\ index\ was\ referenced\ that\ is\ null\ or\ does\ not\ exist),\n\ return\ null.\ (You\ can\ print\ an\ error\ too\ if\ you\ like).\ Be\ sure\ to\ make\ sure\n\ each\ method\ runs\ as\ efficiently\ as\ possible.\n\ \n\ Assignment\ by\ Mr.\ Weinfeld,\ completed\ by\ D.\ Mirin\n
comment1.params=
comment1.target=DataStructure()
comment1.text=\#\ represents\ the\ index\ of\ the\ smallest\ null\ element\ in\ data.\ UPDATE\ THIS.
comment10.params=
comment10.target=java.lang.String\ toString()
comment10.text=\#\n\ toString,\ no\ gets\ or\ sets\ or\ equals\ needed.\n\ toString\ should\ display\ all\ the\ elements\ in\ data\ on\ one\ line,\ no\ nulls.\n
comment2.params=toAdd
comment2.target=void\ add(java.lang.Integer)
comment2.text=\#\n\ Place\ toAdd\ in\ the\ smallest\ index\ null\ space.\ If\ the\ array\ is\ full,\ double\ it's\ size\ to\ create\ \n\ more\ space.\n
comment3.params=index\ toAdd
comment3.target=void\ add(int,\ java.lang.Integer)
comment3.text=\#\n\ Insert\ toAdd\ in\ the\ indicated\ index.\ Shift\ all\ other\ elements\ to\ make\ space.\n
comment4.params=index\ toReplace
comment4.target=java.lang.Integer\ set(int,\ java.lang.Integer)
comment4.text=\#\n\ Replace\ the\ Integer\ at\ index\ with\ toReplace.\ Return\ the\ removed\ Integer.\n
comment5.params=index
comment5.target=java.lang.Integer\ remove(int)
comment5.text=\#\n\ Remove\ the\ Integer\ at\ index\ from\ data\ and\ return\ it.\ Shift\ all\ to\ close\ the\ gap\ created\ by\ \n\ the\ removal.Do\ not\ change\ the\ size\ of\ data.\n
comment6.params=index
comment6.target=java.lang.Integer\ get(int)
comment6.text=\#\n\ Return\ the\ Integer\ at\ index.\n
comment7.params=
comment7.target=int\ size()
comment7.text=\#\n\ Return\ the\ number\ of\ non\ null\ elements\ in\ data.\n
comment8.params=value
comment8.target=boolean\ contains(java.lang.Integer)
comment8.text=\#\n\ Return\ true\ if\ value\ is\ contained\ in\ data,\ false\ otherwise.\n
comment9.params=
comment9.target=void\ resize()
comment9.text=\#\n\ Double\ the\ size\ of\ data\ and\ copy\ all\ the\ elements\ over.\n
numComments=11
